# 1. 
# Show a list the Company Name and Country for all Suppliers located in Japan or Germany.

SELECT `CompanyName`, `Country` 
FROM `hwSuppliers` 
WHERE `Country` = 'Japan' OR `Country` = 'Germany';

# 2. 
# Show a list of Product Name, 
# Quantity per Unit and Unit Price for products 
# with a Unit Price less than $7 but more than $ 4

SELECT `ProductName`, `QuantityPerUnit`, `UnitPrice` 
FROM `hwProducts` 
WHERE `UnitPrice` > 4 AND `UnitPrice` < 7;

# 3.

# Show a list of Company Name, City and Country for Customers 
# whose Country is USA and City is Portland OR 
# Country is Canada and City is Vancouver.


SELECT `CompanyName`, `City`, `Country` 
FROM `hwSuppliers` 
WHERE (`Country` = 'USA' AND `City` = 'Portland') OR
(`Country` = 'Canada' AND `City` = 'Vancouver');

# 4.

# Show a list the Contact Name and Contact Title for all Suppliers 
# with a SupplierID from 5 to8 (inclusive) 
# and sort in descending order by ContactName.

SELECT `ContactName`, `ContactTitle` 
FROM `hwSuppliers`
WHERE `SupplierID` > 5 AND `SupplierID` <= 8
ORDER BY `ContactName` DESC;

# 5. 
# Show a product name and unit price of the least expensive product 
# (i.e. lowest unit price)?

SELECT `ProductName`, `UnitPrice` 
FROM `hwProducts`
ORDER BY `UnitPrice` ASC
LIMIT 1;

# 6.
# Display Order Count by their Ship Country for all except USA 
# for Shipped Date between May 4th and 10th 2015 
# whose Order Count is greater than 3.

SELECT COUNT(`ShipCountry`), `ShipCountry`
FROM `hwOrders`
WHERE `ShipCountry` != 'USA' AND Date(`ShippedDate`) BETWEEN Date('2015-05-04') AND DATE('2015-05-10')
GROUP BY `ShipCountry`
HAVING COUNT(`ShipCountry`) > 3;

# 7. 
# Show a list of all employees with their first name, last name and hiredate (formated to mm/dd/yyyy) 
# who are NOT living in the USA and have been employed for at least 5 years.

SELECT `FirstName`, `LastName`, DATE_FORMAT(`HireDate`, '%d/%m/%Y')
FROM `hwEmployees`
WHERE `Country` != 'USA' AND
DATEDIFF(CURRENT_DATE(), `HireDate`) > 365*5;

# 8.
# Show a list of Product Name and their 'Inventory Value' 
# (Inventory Value = units in stock multiplied by their unit price) 
# for products whose 'Inventory Value' is over 3000 but less than 4000.

SELECT `ProductName`, `UnitPrice`*`UnitsInStock`
FROM `hwProducts`
WHERE `UnitPrice`*`UnitsInStock` BETWEEN 3000 AND 4000;

# 9.
# Show a list of Products' product Name, Unit in Stock and ReorderLevel level 
# whose Product Name starts with 'S' that are currently in stock (i.e. at least one Unit in Stock) 
# and Unit in Stock is at or below the reorder level.

SELECT `ProductName`, `UnitsInStock`, `ReorderLevel`
FROM `hwProducts`
WHERE `ProductName` > 'Sa' AND `ProductName` < 'Sz'
AND `UnitsInStock` > 1
AND `UnitsInStock` <= `ReorderLevel`;

# 10.
# Show a Product Name, Unit Price for all products, 
# whose Quantity Per Unit has/measure in 'box' that have been discontinued (i.e. discontinued = 1).

SELECT `ProductName`, `UnitPrice`
FROM `hwProducts`
WHERE `QuantityPerUnit` IS NOT NULL
AND `Discontinued` = 1;

# 11. 
# Show a list of Product Name and their TOTAL inventory value 
# (inventory value = UnitsInStock * UnitPrice) for Supplier's Country from Japan.

SELECT `ProductName`, `UnitsInStock`*`UnitPrice` AS `InventoryValue`
FROM `hwProducts`
INNER JOIN `hwSuppliers`
ON `hwProducts`.`SupplierID` = `hwSuppliers`.`SupplierID`
AND `hwSuppliers`.`Country` = 'Japan';

# 12.
# Show a list country and their customer's count that is greater than 8.

SELECT `Country`
FROM `hwCustomers`
GROUP BY `Country`
HAVING COUNT(`Country`) > 8;

# 13.
# Show a list of Orders' Ship Country, Ship City and their Order count 
# for Ship Country 'Austria' and 'Argentina'

SELECT `ShipCountry`, `ShipCity` , COUNT(*) AS OrderCount
FROM `hwOrders`
GROUP BY `ShipCountry`, `ShipCity`
HAVING `ShipCountry` = 'Austria' OR `ShipCountry` = 'Argentina';

# 14.
# Show a list of Supplier's Company Name and Product's Product Name 
# for supplier's country from Spain.

SELECT `CompanyName`, `ProductName`
FROM `hwSuppliers`
INNER JOIN `hwProducts`
ON `hwProducts`.`SupplierID` = `hwSuppliers`.`SupplierID`
WHERE `Country` = 'Japan';

# 15.
# What is the 'Average Unit Price' (rounded to two decimal places) 
# of all the products whose ProductName ends with 'T'?

SELECT ROUND(AVG(`UnitPrice`),2)
FROM `hwProducts`
WHERE RIGHT(`ProductName`, 1) = 'T';

# 16.
# Show a list of employee's full name (i.e. firstname, lastname), title and their Order count
# for employees who has more than 120 orders.

SELECT CONCAT(`FirstName`, ' ', `LastName`) AS FullName, 
	 `Title`, 
	 COUNT(*) AS OrderCount
FROM `hwEmployees`
INNER JOIN `hwOrders`
ON `hwOrders`.`EmployeeID` = `hwEmployees`.`EmployeeID`
GROUP BY FullName, `Title`
HAVING OrderCount > 120;

# 17.
# Show a list customer's company Name and their country 
# who has NO Orders on file (i.e. NULL Orders).

SELECT `CompanyName`, `Country`
FROM `hwCustomers`
LEFT JOIN `hwOrders`
ON `hwCustomers`.`CustomerID` = `hwOrders`.`CustomerID`
WHERE `hwOrders`.`CustomerID` IS NULL;

# 18.
# Show a list of Category Name and Product Name 
# for all products that are currently out of stock (i.e. UnitsInStock = 0).

SELECT `ProductName`, `CategoryName`
FROM `hwProducts`
INNER JOIN `hwCategories`
ON `hwProducts`.`CategoryID` = `hwCategories`.`CategoryID`
WHERE `UnitsInStock` = 0;

# 19.
# Show a list of products' Product Name and Quantity Per Unit, 
# which are measured in 'pkg' or 'pkgs' or 'jars' 
# for a supplier’s country from Japan.

SELECT `ProductName`, `QuantityPerUnit`
FROM `hwProducts`
INNER JOIN `hwSuppliers`
ON `hwProducts`.`SupplierID` = `hwSuppliers`.`SupplierID`
AND `hwSuppliers`.`Country` = 'Japan'
WHERE `QuantityPerUnit` LIKE '%pkg.' OR
`QuantityPerUnit` LIKE '%pkgs.' OR
`QuantityPerUnit` LIKE '%jars';

# 20. 
# Show a list of customer's company name, their Order’s ship name and 
# total value of all their orders (rounded to 2 decimal places) for customer's from Mexico.
# (value of order = (UnitPrice multiplied by Quantity) less discount).

SELECT `CompanyName`, `ShipName`, 
ROUND(SUM(`UnitPrice`*`Quantity`-`Discount`),2) AS TotalValue
FROM `hwCustomers`
INNER JOIN `hwOrders`
ON `hwCustomers`.`CustomerID` = `hwOrders`.`CustomerID`
INNER JOIN `hwOrderDetails`
ON `hwOrders`.`OrderID` = `hwOrderDetails`.`OrderID`
GROUP BY `CompanyName`, `ShipName`;

# 21.
# Show a list of products' Product Name and suppliers' Region 
# whose product name starts with 'L' and Region is NOT blank/empty.

SELECT `ProductName`, 
CASE
	WHEN `Region` IS NOT NULL AND `Region` != '' THEN 'not blank'
	ELSE 'empty'
END AS RegionBlankStatus

FROM `hwProducts`
INNER JOIN `hwSuppliers`
ON `hwProducts`.`SupplierID` = `hwSuppliers`.`SupplierID`
WHERE LEFT(`ProductName`, 1) = 'L';

# 22.
# Show a list of Order's Ship Country, Ship Name and Order Date 
# (formatted as MonthName andYear, e.g. March 2015) 
# for all Orders from 'Versailles' Ship City 
# whose Customer's record doesn't exists in Customer table.

SELECT `ShipCountry`, `ShipName`, DATE_FORMAT(`OrderDate`, '%M %Y') AS Date
FROM `hwOrders`
WHERE `ShipCity` = 'Versailles' 
AND NOT EXISTS(SELECT * FROM `hwCustomers` WHERE `hwCustomers`.`City` = 'Versailles' AND `hwCustomers`.`CustomerID` = `hwOrders`.`CustomerID`);

# 23.
# Show a list of products' Product Name and Units In Stock 
# whose Product Name starts with 'F'
# and Rank them based on UnitsInStock from highest to lowest 
# (i.e. highest UnitsInStock rank = 1, and so on). 
# Display rank number as well.

SELECT `ProductName`, `UnitsInStock`
FROM `hwProducts`
WHERE LEFT(`ProductName`, 1) = 'F'
ORDER BY `UnitsInStock` DESC;

/*
Ranged only in T-SQL:
SELECT `ProductName`, `UnitsInStock`, 
	 DENSE_RANK() OVER(ORDER BY `UnitsInStock` DESC) AS Rank
FROM `hwProducts`
WHERE LEFT(`ProductName`, 1) = 'F';
*/

# 24.
# Show a list of products' Product Name and Unit Price 
# for ProductID from 1 to 5 (inclusive)
# and Rank them based on UnitPrice from lowest to highest

SELECT `ProductName`, `UnitPrice`
FROM `hwProducts`
WHERE `ProductID` > 1 AND `ProductID` <= 5
ORDER BY `UnitPrice` ASC;


/*
Ranged only in T-SQL:
SELECT `ProductName`, `UnitPrice`,
	 DENSE_RANK() OVER(ORDER BY `UnitPrice` ASC)
FROM `hwProducts`
WHERE `ProductID` > 1 AND `ProductID` <= 5;
*/

# 25.
# Show a list of employees' first name, last name, country and date of birth (formatted to mm/dd/yyyy) 
# who were born after 1984 and Rank them by date of birth (oldest employee rank 1st, and so on) for EACH country, 
# i.e. Rank number should reset/restart for EACH country.

SELECT `FirstName`, `LastName`, `Country`, DATE_FORMAT(`BirthDate`, '%d/%m/%Y')
FROM `hwEmployees`
WHERE DATE_FORMAT(`BirthDate`, '%Y') > '1984'
ORDER BY DATE_FORMAT(`BirthDate`, '%Y') ASC;

/*
Ranged only in T-SQL:

SELECT `FirstName`, `LastName`, `Country`, DATE_FORMAT(`BirthDate`, '%d/%m/%Y'),
	 ROW_NUMBER() OVER (PARTITION BY `Country` ORDER BY DATE_FORMAT(`BirthDate`, '%Y') ASC)
FROM `hwEmployees`
WHERE DATE_FORMAT(`BirthDate`, '%Y') > '1984';

*/